// MIT Licensed (see LICENSE.md).

// RenderPass fragments are intended to be constructed in script
// and passed directly to the AddRenderTaskRenderPass method.
// RenderPass fragment code is implicitely appended to the end
// of Materials in the compositing of the final shaders programs.
[Pixel][RenderPass]
struct DecalPass
{
  [Input] var Color : Real4 = Real4(1.0, 0.0, 0.0, 1.0);
  
  [Input] var Albedo : Real3;
  [Input] var Alpha : Real;
  [Input] var Metallic : Real;

  // Albedo, Metallic
  [Output] var Target1 : Real4;

  function Main()
  {
    this.Target1.XYZ = this.Albedo.XYZ;
    this.Target1.W = this.Alpha;
  }
}

[Pixel][PostProcess]
struct DecalMerge
{
  [Input] var DBuffer1 : SampledImage2d;
  [Input] var GBuffer1 : SampledImage2d;
  
  
  [FragmentInput][StageInput] var Uv : Real2;
  
  [Output] var Target1 : Real4;
      
  function Main()
  {
    var dbuffer = this.DBuffer1.Sample(this.Uv);
    var gbuffer = this.GBuffer1.Sample(this.Uv);
    
    this.Target1.XYZ = Math.Lerp(gbuffer.XYZ, dbuffer.XYZ, dbuffer.W);
    this.Target1.W = gbuffer.W;
  }
}
