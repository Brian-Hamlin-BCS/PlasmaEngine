[Pixel]
struct MaskedMetallicMap
{
    [FragmentInput][StageInput] var Uv : Real2;
    [Input] var MetallicMaskMap : SampledImage2d;
    [Input] var RedChannel : SampledImage2d;
    [Input] var MetallicOffsetRed : Real = 0.0;
    [Input] var GreenChannel : SampledImage2d;
    [Input] var MetallicOffsetGreen : Real = 0.0;
    [Input] var BlueChannel : SampledImage2d;
    [Input] var MetallicOffsetBlue : Real = 0.0;
    
    [FragmentInput] var UvScale : Real2 = Real2(1,1);

    [FragmentInput][Output] var Metallic : Real;

    function Main()
    {
        var metallicMask = this.MetallicMaskMap.Sample(this.Uv / this.UvScale);
        var metallic = this.Metallic;
        metallic = Math.Lerp(metallic, this.RedChannel.Sample(this.Uv).X + this.MetallicOffsetRed, metallicMask.X);
        metallic = Math.Lerp(metallic, this.GreenChannel.Sample(this.Uv).X + this.MetallicOffsetGreen, metallicMask.Y);
        metallic = Math.Lerp(metallic, this.BlueChannel.Sample(this.Uv).X + this.MetallicOffsetBlue, metallicMask.Z);
        this.Metallic = metallic;
    }
}
