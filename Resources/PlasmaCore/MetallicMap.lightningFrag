// MIT Licensed (see LICENSE.md).

// Metallic input for lighting opaque geometry.
// Output values are mapped from a texture over the surface.
[Pixel]
struct MetallicMap
{
  [FragmentInput][StageInput] var Uv : Real2;
  [Input] var MetallicMap : SampledImage2d;
  [Input] var Invert : Boolean;
  [Input] var UseRed : Boolean = true;
  [Input] var UseGreen : Boolean = false;
  [Input] var UseBlue : Boolean = false;
  [Input] var UseAlpha : Boolean = false;
  
  [Output] var Metallic : Real;
  
  function Main()
  {
    if(this.UseRed)
      this.Metallic = this.MetallicMap.Sample(this.Uv).X;
    if(this.UseGreen)
      this.Metallic = this.MetallicMap.Sample(this.Uv).Y;
    if(this.UseBlue)
      this.Metallic = this.MetallicMap.Sample(this.Uv).Z;
    if(this.UseAlpha)
      this.Metallic = this.MetallicMap.Sample(this.Uv).W;
      
      
    if(this.Invert)
        this.Metallic = 1.0 - this.Metallic;
  }
}